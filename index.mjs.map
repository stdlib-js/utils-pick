{"version":3,"file":"index.mjs","sources":["../lib/pick.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport { primitives as isStringArray } from '@stdlib/assert-is-string-array' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy containing only specified keys. If a key does not exist as an own property in a source object, the key is ignored.\n*\n* @param {Object} obj - source object\n* @param {(string|StringArray)} keys - keys to copy\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be either a string or an array of strings\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pick( obj1, 'b' );\n* // returns { 'b': 2 }\n*/\nfunction pick( obj, keys ) {\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( '0lC3X', obj ) );\n\t}\n\tout = {};\n\tif ( isString( keys ) ) {\n\t\tif ( hasOwnProp( obj, keys ) ) {\n\t\t\tout[ keys ] = obj[ keys ];\n\t\t}\n\t\treturn out;\n\t}\n\tif ( isStringArray( keys ) ) {\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( '0lCCV', keys ) );\n}\n\n\n// EXPORTS //\n\nexport default pick;\n"],"names":["pick","obj","keys","out","key","i","TypeError","format","isString","hasOwnProp","isStringArray","length"],"mappings":";;gYAgDA,SAASA,EAAMC,EAAKC,GACnB,IAAIC,EACAC,EACAC,EACJ,GAAoB,iBAARJ,GAA4B,OAARA,EAC/B,MAAM,IAAIK,UAAWC,EAAQ,QAASN,IAGvC,GADAE,EAAM,GACDK,EAAUN,GAId,OAHKO,EAAYR,EAAKC,KACrBC,EAAKD,GAASD,EAAKC,IAEbC,EAER,GAAKO,EAAeR,GAAS,CAC5B,IAAMG,EAAI,EAAGA,EAAIH,EAAKS,OAAQN,IAC7BD,EAAMF,EAAMG,GACPI,EAAYR,EAAKG,KACrBD,EAAKC,GAAQH,EAAKG,IAGpB,OAAOD,EAER,MAAM,IAAIG,UAAWC,EAAQ,QAASL"}